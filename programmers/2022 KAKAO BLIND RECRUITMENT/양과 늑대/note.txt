node 수가 기껏해야 17개인데 시간은 10초로 넉넉?함

탐색 가능한 노드 목록을 유지하면서 탐색?
모든 노드가 데려갈 수 없는 상태이면 종료하면 되지 않을까?
=> 꽤 많은 케이스에서 실패

Why? 굳이 방문하지 않아도 될 늑대를 방문함
방문하지 않아도 될 늑대?: 하위 노드에 양이 없는 늑대
매번 promising을 계산하자니 중복이 많으니 미리 계산해 두자
=> 또 실패

Why? 양까지 거리가 짧은 늑대 노드를 먼저 방문해야 하는데 다른 늑대 노드를 먼저 방문해서 틀리는 경우 발생
bool 형태의 promising 대신 양까지의 거리를 저장하고 후보 목록을 PQ로 관리하자
=> 정답률 올랐지만 아직 일부 테스트 실패

Why? 양이 같은 거리에 떨어져 있더라도 하위에 존재하는 양의 수에 따라서도 우선순위가 갈린다
1번 후보와 2번 후보 모두 같은 거리에 양이 있다 해도 어느 쪽을 먼저 방문하냐에 따라 반대쪽을 방문할 수 있는지가 달라짐
두 후보가 하위에 양이 같은 거리에 있는 경우 하위에 더 많은 양을 가진 쪽으로 진행하자
=> 딱 한 케이스만 실패

Why? 하위 양까지 거리는 멀어도 하위에 양의 수가 더 많으면 먼 쪽이 더 유리할 수 있다
둘 다 도달 가능하면 양이 더 많은 쪽으로 먼저 진행
둘 중 하나만 도달 가능하면 그 쪽으로 진행
어차피 둘 다 도달하지 못하는 후보면 우선순위 동등
으로 두고 PQ를 구성해보자

=> 드디어 성공