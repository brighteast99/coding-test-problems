공간을 실제로 격자로 생각하면 구슬의 이동이 너무 복잡할 것.
어차피 공간은 벽으로 나뉘어 있어 벽 너머로는 구슬끼리 영향을 주지 못하므로 1차원 배열로 펴서 생각할 수 있음

단, 상어가 얼음 파편을 던질 때는 중앙을 중심으로 한쪽 방향으로 n칸만큼 영향을 주므로,
그 칸들 사이의 규칙을 찾아야 함

상어 옆 칸을 0번으로 봤을 때, 방향별 인덱스를 관찰해 보면
왼쪽: 0, 9, 26, 51, ...
아래: 2, 13, 32, 59, ...
오른쪽: 4, 17, 38, 67, ...
위: 6, 21, 44, 75, ...

한 인덱스와 다음 인덱스 사이의 차를 계산해 보면
왼쪽: 1 + 8 * 1, 1 + 8 * 2, 1 + 8 * 3, ...
아래: 3 + 8 * 1, 3 + 8 * 2, 3 + 8 * 3, ...
오른쪽: 5 + 8 * 1, 5 + 8 * 2, 5 + 8 * 3, ...
위: 7 + 8 * 1, 7 + 8 * 2, 7 + 8 * 3, ...
규칙이 보임

인덱스를 1번부터 시작하면 첫 칸의 인덱스도 쉽게 표현 가능할듯 (0 + (1 or 3 or 5 or 7) + 8 * 0)
←↓→↑ 방향이 각각 1, 3, 5, 7을 베이스로 하므로, 입력으로 들어오는 방향들을 변환해주는 것이 편할 것으로 보임
처음 N×N으로 주어지는 입력을 일자로 펴는 것은 마법사 상어와 토네이도 문제에서 이미 해결해봄.
이를 이용해 입력을 1차원으로 펼친 뒤 위에서 찾은 규칙을 적용하면 4방향으로 얼음 파편을 떨어뜨리는 것은 쉽게 해결 가능


나머지(빈칸 당기기, 4개 이상 이어진 구슬 터뜨리기 등)만 잘 구현하면 됨